@import "oneline-input";
$element-separator: '__';
$modifier-separator: '--';
$state-prefix: 'is-';

/* BEM support Func
 -------------------------- */
@function selectorToString($selector) {
  $selector: inspect($selector);
  $selector: str-slice($selector, 2, -2);
  @return $selector;
}

@function containsModifier($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, $modifier-separator) {
    @return true;
  } @else {
    @return false;
  }
}

@function containWhenFlag($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, '.' + $state-prefix) {
    @return true
  } @else {
    @return false
  }
}

@function containPseudoClass($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, ':') {
    @return true
  } @else {
    @return false
  }
}

@function hitAllSpecialNestRule($selector) {

  @return containsModifier($selector) or containWhenFlag($selector) or containPseudoClass($selector);
}

@mixin e($element) {
    $E: $element !global;
    $selector: &;
    $currentSelector: "";
    @each $unit in $element {
      $currentSelector: #{$currentSelector + "." + "oneline-ui" + "__"+ $unit + ","};
    }
  
    @if hitAllSpecialNestRule($selector) {
      @at-root {
        #{$selector} {
          #{$currentSelector} {
            @content;
          }
        }
      }
    } @else {
      @at-root {
        #{$currentSelector} {
          @content;
        }
      }
    }
  }
  @mixin m($modifier) {
    $selector: &;
    $currentSelector: "";
  
    @each $unit in $modifier {
      $currentSelector: #{$currentSelector + & + "--" + $unit + ","};
    }
  
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
/* Scrollbar
 -------------------------- */
@mixin scroll-bar {
    $--scrollbar-thumb-background: #b4bccc;
    $--scrollbar-track-background: #fff;
  
    &::-webkit-scrollbar {
      z-index: 11;
      width: 6px;
  
      &:horizontal {
        height: 6px;
      }
  
      &-thumb {
        border-radius: 5px;
        width: 6px;
        background: $--scrollbar-thumb-background;
      }
  
      &-corner {
        background: $--scrollbar-track-background;
      }
  
      &-track {
        background: $--scrollbar-track-background;
  
        &-piece {
          background: $--scrollbar-track-background;
          width: 6px;
        }
      }
    }
  }
  
  /* Placeholder
   -------------------------- */
  @mixin placeholder {
    &::-webkit-input-placeholder {
      @content
    }
  
    &::-moz-placeholder {
      @content
    }
  
    &:-ms-input-placeholder {
      @content
    }
  }
  @mixin when($state) {
    @at-root {
      &.#{"is-" + $state} {
        @content;
      }
    }
  }
#{$prefix}input {
    position: relative;
    font-size: $--font-size-base;
    display: inline-block;
    width: 100%;
    @include scroll-bar;
  
    & .el-input__clear {
      color: $--input-icon-color;
      font-size: $--input-font-size;
      cursor: pointer;
      transition: $--color-transition-base;
  
      &:hover {
        color: $--input-clear-hover-color;
      }
    }
  
    & .el-input__count {
      height: 100%;
      display: inline-flex;
      align-items: center;
      color: $--color-info;
      font-size: 12px;
  
      .el-input__count-inner {
        background: $--color-white;
        display: inline-block;
        padding: 0 5px;
      }
    }
  
    @include e(inner) {
      -webkit-appearance: none;
      background-color: $--input-background-color;
      background-image: none;
      border-radius: $--input-border-radius;
      border: $--input-border;
      box-sizing: border-box;
      color: $--input-font-color;
      display: inline-block;
      font-size: inherit;
      height: $--input-height;
      line-height: $--input-height;
      outline: none;
      padding: 0 15px;
      transition: $--border-transition-base;
      width: 100%;
  
      &::placeholder {
        color: $--input-placeholder-color;
      }
  
      &:hover {
        border-color: $--input-hover-border;
      }
  
      &:focus {
        outline: none;
        border-color: $--input-focus-border;
      }
    }
  
    @include e(suffix) {
      position: absolute;
      height: 100%;
      right: 5px;
      top: 0;
      text-align: center;
      color: $--input-icon-color;
      transition: all .3s;
      pointer-events: none;
    }
  
    @include e(suffix-inner) {
      pointer-events: all;
    }
  
    @include e(prefix) {
      position: absolute;
      height: 100%;
      left: 5px;
      top: 0;
      text-align: center;
      color: $--input-icon-color;
      transition: all .3s;
    }
  
    @include e(icon) {
      height: 100%;
      width: 25px;
      text-align: center;
      transition: all .3s;
      line-height: $--input-height;
  
      &:after {
        content: '';
        height: 100%;
        width: 0;
        display: inline-block;
        vertical-align: middle;
      }
    }
  
    @include e(validateIcon) {
      pointer-events: none;
    }
  
    @include when(active) {
      .el-input__inner {
        outline: none;
        border-color: $--input-focus-border;
      }
    }
  
    @include when(disabled) {
      .el-input__inner {
        background-color: $--input-disabled-fill;
        border-color: $--input-disabled-border;
        color: $--input-disabled-color;
        cursor: not-allowed;
  
        &::placeholder {
          color: $--input-disabled-placeholder-color;
        }
      }
  
      .el-input__icon {
        cursor: not-allowed;
      }
    }
  
    @include when(exceed) {
      .el-input__inner {
        border-color: $--color-danger;
      }
  
      .el-input__suffix {
        .el-input__count {
          color: $--color-danger;
        }
      }
    }
  
    @include m(suffix) {
      .el-input__inner {
        padding-right: 30px;
      }
    }
  
    @include m(prefix) {
      .el-input__inner {
        padding-left: 30px;
      }
    }
  
    @include m(medium) {
      font-size: $--input-medium-font-size;
  
      // @include e(inner) {
      //   height: $--input-medium-height;
      //   line-height: $--input-medium-height;
      // }
  
      .el-input__icon {
        line-height: $--input-medium-height;
      }
    }
    @include m(small) {
      font-size: $--input-small-font-size;
  
      // @include e(inner) {
      //   height: $--input-small-height;
      //   line-height: $--input-small-height;
      // }
  
      .el-input__icon {
        line-height: $--input-small-height;
      }
    }
    @include m(mini) {
      font-size: $--input-mini-font-size;
  
      // @include e(inner) {
      //   height: $--input-mini-height;
      //   line-height: $--input-mini-height;
      // }
  
      .el-input__icon {
        line-height: $--input-mini-height;
      }
    }
  }